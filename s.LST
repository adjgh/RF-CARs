C51 COMPILER V9.00   S                                                                     04/21/2018 10:16:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE S
OBJECT MODULE PLACED IN s.OBJ
COMPILER INVOKED BY: C:\Keil4\C51\BIN\C51.EXE s.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <stc89c5xrc.h>
   2          #include <string.h>
   3          #include "NRF24L01_drv.h"
   4          
   5          sbit right_wheel_back = P1^0;
   6          sbit right_wheel_go = P1^1;
   7          sbit left_wheel_back = P1^2;
   8          sbit left_wheel_go = P1^3;
   9          
  10          unsigned char count = 0x0;
  11          
  12          bit f_go    = 0;
  13          bit f_back  = 0;
  14          bit f_left  = 0;
  15          bit f_right = 0;
  16          bit f_stop  = 0;
  17          bit f_last  = 0;
  18          bit f_sstop = 0;
  19          bit f_next  = 0;
  20          bit direct  = 0;
  21          
  22          void go(void);
  23          
  24          void back(void);
  25          
  26          void left(void);
  27          
  28          void right(void);
  29          
  30          void stop(void);
  31          
  32          void last(void);
  33          
  34          void next(void);
  35          
  36          void init_speaker(void);
  37          
  38          int main(void)
  39          {
  40   1        unsigned char rec = 0x0,status = 0x0;
  41   1        init_NRF24L01_B();
  42   1        SetRX_Mode_B();
  43   1        init_speaker();
  44   1        while(1)
  45   1       {
  46   2         status = SPI_Read_B(STATUS);
  47   2         if (status == 0x40)
  48   2      {
  49   3         SPI_RW_Reg_B(WRITE_REG + STATUS,0x0);
  50   3         rec = SPI_Read_B(RD_RX_PLOAD);//Çå¼Ä´æÆ÷
  51   3         SPI_RW_Reg_B(FLUSH_RX,0);
  52   3         switch (rec)
  53   3        {
  54   4          case 0x1:{
  55   5                        f_go = 1;
C51 COMPILER V9.00   S                                                                     04/21/2018 10:16:34 PAGE 2   

  56   5                        f_back = 0;
  57   5                                f_left  = 0;
  58   5                    f_right = 0;
  59   5                    f_stop  = 0;
  60   5                                break;
  61   5                               }
  62   4              case 0x2:{
  63   5                        f_go = 0;
  64   5                        f_back = 1;
  65   5                                f_left  = 0;
  66   5                    f_right = 0;
  67   5                    f_stop  = 0;
  68   5                                break;
  69   5                               }
  70   4              case 0x3:{
  71   5                        f_go = 0;
  72   5                        f_back = 0;
  73   5                                f_left  = 1;
  74   5                    f_right = 0;
  75   5                    f_stop  = 0;
  76   5                                break;
  77   5                               }
  78   4              case 0x4:{
  79   5                        f_go = 0;
  80   5                        f_back = 0;
  81   5                                f_left  = 0;
  82   5                    f_right = 1;
  83   5                    f_stop  = 0;
  84   5                                break;
  85   5                               }
  86   4              case 0x5:{
  87   5                        f_go = 0;
  88   5                        f_back = 0;
  89   5                                f_left  = 0;
  90   5                    f_right = 0;
  91   5                    f_stop  = 1;
  92   5                                break;
  93   5                               }
  94   4              case 0x6:f_last  = 1;break;
  95   4              case 0x7:f_sstop = 1;break;
  96   4              case 0x8:f_next  = 1;break;
  97   4      }
  98   3         rec = 0x0; 
  99   3       }
 100   2        if(f_go)
 101   2              go();
 102   2        if(f_back)
 103   2              back();
 104   2        if(f_left)
 105   2              left();
 106   2        if(f_right)
 107   2         right();
 108   2        if(f_stop)
 109   2              stop();
 110   2        if (f_last)
 111   2       {
 112   3         last();
 113   3         count--;
 114   3         f_last = 0;
 115   3       }
 116   2        if (f_sstop)
 117   2       {
C51 COMPILER V9.00   S                                                                     04/21/2018 10:16:34 PAGE 3   

 118   3         init_speaker();
 119   3         f_sstop = 0;
 120   3       }
 121   2        if (f_next)
 122   2      {
 123   3         next();
 124   3         f_next = 0;
 125   3         count++;
 126   3      }       
 127   2       }
 128   1      }
 129          
 130          void go(void)
 131          {
 132   1       direct = 0;
 133   1       right_wheel_back = 0;
 134   1       right_wheel_go   = 1;
 135   1       left_wheel_back  = 0;
 136   1       left_wheel_go    = 1;
 137   1      }
 138          
 139          void back(void)
 140          {
 141   1       direct = 1;
 142   1       right_wheel_back = 1;
 143   1       right_wheel_go   = 0;
 144   1       left_wheel_back  = 1;
 145   1       left_wheel_go    = 0;
 146   1      } 
 147          
 148          void left(void)
 149          {
 150   1       if (direct == 0)
 151   1      {
 152   2       right_wheel_back = 0;
 153   2       right_wheel_go   = 1;
 154   2       left_wheel_back  = 1;
 155   2       left_wheel_go    = 0;
 156   2      }
 157   1       else 
 158   1      {
 159   2       right_wheel_back = 1;
 160   2       right_wheel_go   = 0;
 161   2       left_wheel_back  = 0;
 162   2       left_wheel_go    = 1; 
 163   2      }
 164   1      }
 165          
 166          void right(void)
 167          {
 168   1       if (direct == 0)
 169   1      {
 170   2       right_wheel_back = 1;
 171   2       right_wheel_go   = 0;
 172   2       left_wheel_back  = 0;
 173   2       left_wheel_go    = 1; 
 174   2      }
 175   1       else
 176   1       {
 177   2         right_wheel_back = 0;
 178   2         right_wheel_go   = 1;
 179   2         left_wheel_back  = 1;
C51 COMPILER V9.00   S                                                                     04/21/2018 10:16:34 PAGE 4   

 180   2         left_wheel_go    = 0;
 181   2       }
 182   1      }
 183          
 184          void stop(void)
 185          {
 186   1        P1 = 0x0;
 187   1      }
 188          
 189          void init_speaker(void)
 190          {
 191   1        P0 = 0xff;
 192   1        count = 0x0;
 193   1      }
 194          
 195          void last(void)
 196          {
 197   1        if (count > 0)
 198   1       { 
 199   2         switch (count)
 200   2        {
 201   3          case 0x7:P07 = 0;break;
 202   3              case 0x6:{P06 = 0;delayms(500);P07 = 1;break;}
 203   3              case 0x5:{P05 = 0;delayms(500);P06 = 1;break;}
 204   3              case 0x4:{P04 = 0;delayms(500);P05 = 1;break;}
 205   3              case 0x3:{P03 = 0;delayms(500);P04 = 1;break;}
 206   3              case 0x2:{P02 = 0;delayms(500);P03 = 1;break;}
 207   3              case 0x1:{P01 = 0;delayms(500);P02 = 1;break;}
 208   3              case 0x0:{P00 = 0;delayms(500);P01 = 1;break;}
 209   3        }
 210   2       }
 211   1              else
 212   1                      init_speaker();
 213   1      }
 214          
 215          void next(void)
 216          {
 217   1        if (count < 0x8)
 218   1       {
 219   2         switch (count)
 220   2        {
 221   3          case 0x0:P00 = 0;break;
 222   3              case 0x1:{P00 = 1;delayms(500);P01 = 0;break;}
 223   3              case 0x2:{P01 = 1;delayms(500);P02 = 0;break;}
 224   3              case 0x3:{P02 = 1;delayms(500);P03 = 0;break;}
 225   3              case 0x4:{P03 = 1;delayms(500);P04 = 0;break;}
 226   3              case 0x5:{P04 = 1;delayms(500);P05 = 0;break;}
 227   3              case 0x6:{P05 = 1;delayms(500);P06 = 0;break;}
 228   3              case 0x7:{P06 = 1;delayms(500);P07 = 0;break;}
 229   3        }
 230   2       }
 231   1              else
 232   1                      init_speaker();
 233   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    576    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       2
C51 COMPILER V9.00   S                                                                     04/21/2018 10:16:34 PAGE 5   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      9    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
